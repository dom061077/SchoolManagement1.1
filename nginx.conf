events {}

http {
    # Redirect IP address to domain
    server {
        listen 80;
        server_name 149.50.130.196;

        # Redirect all traffic to the domain
        return 301 https://www.warriorit.site$request_uri;
    }

    server {
        listen 443 ssl;
        server_name  www.warriorit.site;

        # SSL Certificate and Key
        ssl_certificate /etc/nginx/ssl/warriorit.site.crt;
        ssl_certificate_key /etc/nginx/ssl/warriorit.site.key;

        # SSL Configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;


        access_log /var/log/nginx/access.log;  # Enable access logging
        error_log /var/log/nginx/error.log debug;  # Set error logging to debug       

        # Backend reverse proxy
        location ~ ^/api {
            
            proxy_pass http://sm-api:8088;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            

            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';

            # Allow preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
                add_header 'Access-Control-Max-Age' 86400;
                return 204;
            }            
        }        
#---------------------

        location  ~ ^/(realms|css|ico|js|resources|admin)/ {
            proxy_set_header Referer $http_referer;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header Host $http_host;
            proxy_pass http://keycloak-sm:8080;
            proxy_redirect off;
        }

#-----------------------
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }        

        # Handle JavaScript | CSS files with the correct MIME type
        location ~ \.(js|css)$ {
            root /usr/share/nginx/html;
            include /etc/nginx/mime.types;
        }

        # Catch-all location to handle refreshes on any route
        location ~ ^/.+$ {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;
      
        }




    }
}